/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FetchSyncRequest extends SpeakeasyBase {
    /**
     * ID of the sync
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=sync_id" })
    syncId: number;
}

/**
 * The outcome of the fetch request
 */
export enum FetchSyncStatus {
    Success = "success",
}

/**
 * Successfully retrieved sync details.
 */
export class FetchSyncResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => components.Sync)
    data: components.Sync;

    /**
     * The outcome of the fetch request
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: FetchSyncStatus;
}

export class FetchSyncResponse extends SpeakeasyBase {
    /**
     * Successfully retrieved sync details.
     */
    @SpeakeasyMetadata()
    twoHundredApplicationJsonObject?: FetchSyncResponseBody;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
