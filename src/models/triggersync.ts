/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TriggerSyncRequest extends SpeakeasyBase {
    /**
     * ID of the sync
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=sync_id" })
    syncId: number;

    /**
     * Determines if the sync should be run as a Full Sync. Note that some sync configurations such as Append do not support full syncs.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=force_full_sync" })
    forceFullSync?: boolean;
}

export class TriggerSyncData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "sync_run_id" })
    syncRunId?: number;
}

/**
 * The outcome of the fetch request
 */
export enum TriggerSyncStatus {
    Success = "success",
}

/**
 * Sync triggered successfully.
 */
export class TriggerSyncResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => TriggerSyncData)
    data: TriggerSyncData;

    /**
     * The outcome of the fetch request
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: TriggerSyncStatus;
}

export class TriggerSyncResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Sync triggered successfully.
     */
    @SpeakeasyMetadata()
    object?: TriggerSyncResponseBody;
}
