/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The type of this source object, will always be `segment`.
 */
export enum SegmentType {
    Segment = "segment",
}

export class Segment extends SpeakeasyBase {
    /**
     * When this segment was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * The source object id for this model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "filter_segment_source_object_id" })
    filterSegmentSourceObjectId?: number;

    /**
     * The id of this segment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * The id of the model that this filter segment is related to (either directly from legacy segments or indirectly via the entity)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "model_id" })
    modelId?: number;

    /**
     * A list of Atomic Molecules, Related Segment Molecules, Relationship Molecules, Molecule Groups and at most one Operation Molecule.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "molecules" })
    molecules?: any[];

    /**
     * The name of this segment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The SQL query associated with this segment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "query" })
    query?: string;

    /**
     * The cached size of the segment at that particular moment in time.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "record_count" })
    recordCount?: number;

    /**
     * The unique identifier for this filter segment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_identifier" })
    resourceIdentifier?: string;

    /**
     * The type of this source object, will always be `segment`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: SegmentType;

    /**
     * When this segment was last updated.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
