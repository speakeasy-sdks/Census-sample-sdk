/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { FieldProperties } from "./fieldproperties";
import { Expose, Type } from "class-transformer";

export enum SupportedOperations {
    Append = "append",
    Insert = "insert",
    Mirror = "mirror",
    Update = "update",
    Upsert = "upsert",
}

export class DestinationObject extends SpeakeasyBase {
    /**
     * Whether or not field names and labels are case sensitive on this object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allow_case_sensitive_fields" })
    allowCaseSensitiveFields?: boolean;

    /**
     * Whether or not you can define custom fields on this object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allow_custom_fields" })
    allowCustomFields?: boolean;

    /**
     * A list of fields associated with this destination.
     */
    @SpeakeasyMetadata({ elemType: FieldProperties })
    @Expose({ name: "fields" })
    @Type(() => FieldProperties)
    fields?: FieldProperties[];

    /**
     * The full name for this object. This is used to identify the object in the API.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "full_name" })
    fullName?: string;

    /**
     * The label for this object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "label" })
    label?: string;

    /**
     * A list of the operations this object supports when being synced to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "supported_operations" })
    supportedOperations?: SupportedOperations[];
}
