/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Column } from "./column";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The type of this source object, will always be `model`.
 */
export enum TypeT {
    Model = "model",
}

export class Model extends SpeakeasyBase {
    /**
     * A list of columns from this model.
     */
    @SpeakeasyMetadata({ elemType: Column })
    @Expose({ name: "columns" })
    @Type(() => Column)
    columns?: Column[];

    /**
     * The compiled query associated with this model if it is built atop a DBT instance.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "compiled_query" })
    compiledQuery?: string;

    /**
     * When this model was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * The description for this model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The id of this model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * The name of this model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The SQL query associated with this model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "query" })
    query?: string;

    /**
     * The source object id for this model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source_object_id" })
    sourceObjectId?: number;

    /**
     * The type of this source object, will always be `model`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TypeT;

    /**
     * When this model was last updated.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
