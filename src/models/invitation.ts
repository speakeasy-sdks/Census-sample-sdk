/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Role assigned to the invitee.
 */
export enum Role {
    Admin = "admin",
    Member = "member",
}

export class Invitation extends SpeakeasyBase {
    /**
     * Timestamp when the invitation was claimed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "claimed_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    claimedAt?: Date;

    /**
     * ID of the user who claimed the invitation.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "claimed_by_id" })
    claimedById?: number;

    /**
     * Timestamp when the invitation was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * ID of the user who created the invitation.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_by_id" })
    createdById?: number;

    /**
     * Email address of the invitee.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    /**
     * Unique identifier for the invitation.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    /**
     * Role assigned to the invitee.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role?: Role;
}
